# Linear device test case

NOUT =  1000   # number of output time-steps
TIMESTEP = 20 # time between outputs

ShiftXderivs = false # use shifted radial derivatives?
TwistShift = false  # use twist-shift condition?
ballooning = false
shiftinitial = false

ZPERIOD=1

##################################################
# Define the mesh to use

[mesh]

nx = 68
ny = 20
nz = 64

length = 1.2  # length of machine in meters #1.25, TS at 1.0
Rmin = 5e-3    # minimum radius in meters
Rmax = 0.15  # maximum radius in meters

Bxy = 0.1

Bpxy = Bxy
Btxy = 0
hthe = 1
dy = length / ny

Rxy = Rmin + (Rmax - Rmin) * x

dr = (Rmax - Rmin) / (nx - 4)
dx = Bpxy * Rxy * dr

ixseps1 = -1  # This line and the one below will add y boundaries
ixseps2 = -1  #


##################################################
# derivative methods

[ddx]

first = C2
second = C2
upwind = W3

[ddy]

first = C2
second = C2
upwind = W3

[ddz]

first = C2
second = C2
upwind = W3

###################################################
# Time-integration solver

[solver]
mxstep = 1000000

# Note: If evolving neutrals, need preconditioning
#type = cvode
#use_precon = true

ATOL = 1.0e-10  # absolute tolerance
RTOL = 1.0e-5   # relative tolerance
mxstep = 1000000  # Maximum internal steps per output

##################################################
# Electrostatic potential solver

[phiSolver]
inner_boundary_flags = 1 # INVERT_IN_CYLINDER  (cylinder axis)
outer_boundary_flags = 16  # INVERT_SET  (2.8 * Te)

[laplacexy]  # 2D solver in X-Y
pctype = sor    # Preconditioner

atol = 1e-12
rtol = 1e-8

core_bndry_dirichlet = false
pf_bndry_dirichlet = true
y_bndry_dirichlet = false

include_y_derivs = true

[laplacexz]
type = cyclic
inner_boundary_flags = 1 # INVERT_IN_CYLINDER  (cylinder axis)
outer_boundary_flags = 16

[aparSolver]
inner_boundary_flags = 1 # 1024 = INVERT_IN_CYLINDER  (cylinder axis)
outer_boundary_flags = 0

# general settings for the model

[Hermes]
numdiff = 1e-3    # Numerical diffusion
hyper = -1      # Hyper-diffusion
ExBdiff = 1e-5 #-1  # Dissipation in ExB advection terms
adpar = -1

electromagnetic = true  # Electromagnetic? Otherwise electrostatic
FiniteElMass    = true  # Finite electron mass?

# Electrostatic potential
split_n0 = false  # Solve n=0 separately?
newXZsolver = true # Use LaplaceXZ solver

# NOTE: all currents switched off for fluid run
j_diamag       = false  # Diamagnetic current: Vort <-> Pe
j_par          = true  # Parallel current:    Vort <-> Psi

pe_par         = true  # Parallel pressure gradient: Pe <-> Psi
resistivity    = true  # Resistivity: Psi -> Pe
thermal_flux   = false
thermal_force  = false
electron_viscosity = false
thermal_conduction = true

neutral_model = 0 	# Evolve neutral gas method
			# 0 - no neutrals
			# 1 - perp diffusion
			# 2 - exponential model for Nn
			# 3 - full neutral model
                        # 4 - Diffusive in XZ, fluid in Y
frecycle = 0.0


carbon_fraction = 0.0  # Carbon %

## Settings for 2D parallel closures
sinks = false
sink_invlpar =  0.2  # 5m parallel connection length
sheath_closure = false
drift_wave = false

density_diffusion = true  # Collisional diffusion
thermal_diffusion = true
ion_viscosity = true      # Collisional viscosity
neoclassical_q = 0        # Enhancement to classical diffusion

anomalous_D = -10.  # Anomalous density diffusion [m^2/s]
anomalous_chi = -10. # Anomalous thermal diffusion [m^2/s]

poloidal_flows = false

magnetic_drift = true
ion_velocity   = true

ion_neutral = 0.0

boussinesq = true   # Use Boussinesq approximation

ne_bndry_flux = false
pe_bndry_flux = false
vort_bndry_flux = false

ramp_mesh      = false
ramp_timescale = 1e4

sheath_model = 3  # 0 = Bohn, 1 = Loizu, 2 = Bohm + free density, 3 = insulating sheath
sheath_yup = true
sheath_ydown = false
sheath_gamma = 6.5
neutral_gamma = 0.0

startprofiles = false

core_sources = false # Only sources in the core
adapt_source = false   # Feedback on profiles (PI controller)
energy_source = true   # Constant power per particle (at fixed x). False -> Constant power per volume
source_p = 1e-2       # Rate based on current error (1/timescale)
source_i = 1e-6       # Integral of error (1/timescale^2)

staggered = false

verbose = true  # Output additional fields Telim and Jpar

# Normalisation factors
Nnorm = 1e19
Tnorm = 1
Bnorm = 1.0

[All]
scale = 0.0

xs_opt = 1
ys_opt = 2
zs_opt = 3

xs_s0 = 0.5
xs_wd = 0.1

ys_s0 = 0.5
ys_wd = 0.3

ys_mode = 1

bndry_all = neumann

[Ne] # Electron density
scale = 1
function = 0.01 + exp(-20*x^2) * (1 - 0.25*y/pi + 1e-3*mixmode(z))
source = 8e5 * exp(-20*x^2) * exp(-y)

[NVi]
bndry_ydown = dirichlet_o2

[Ve]
bndry_ydown = dirichlet_o2

[Jpar]
bndry_ydown = dirichlet_o2

[Vort] # Vorticity

[VePsi]
bndry_core = neumann_o2
bndry_pf   = dirichlet_o2
bndry_xout = dirichlet_o2

[Pe]  # Electron pressure
scale = 0.05
function = 0.001 + exp(-40*x^2) * (1 - 0.25*y/pi + 1e-3*mixmode(z))
source = 6.4e6* exp(-40*x^2) * exp(-y)

[phi]
# Radial boundaries determined by Laplacian inversion
bndry_xin = none
bndry_xout = none
