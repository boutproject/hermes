
NOUT = 1000     # number of output time-steps
TIMESTEP = 10  # time between outputs

ShiftXderivs = true # use shifted radial derivatives?
TwistShift = true  # use twist-shift condition?
ballooning = true
shiftinitial = false

MZ = 1     # number of points in z direction (2^n + 1)

ZPERIOD=4

grid="d3d_119919.nc"

[restart]
init_missing=true

[mesh]
symmetricGlobalX = true

shiftangle_from_zshift=true

##################################################
# derivative methods

[ddx]

first = C2
second = C2
upwind = W3

[ddy]

first = C2
second = C2
upwind = W3

[ddz]

first = C2
second = C2
upwind = W3

###################################################
# Time-integration solver

[solver]
#type = pvode
use_precon = false

ATOL = 1.0e-10  # absolute tolerance
RTOL = 1.0e-5   # relative tolerance
mxstep = 1000000  # Maximum internal steps per output

[laplace]
all_terms = true
nonuniform=true

##################################################
# Electrostatic potential solver

[phiSolver]
inner_boundary_flags = 0
outer_boundary_flags = 16  # INVERT_SET  (2.8 * Te)

all_terms = true
nonuniform=true   # NOTE: Necessary to avoid numerical instability

[laplacexy]  # 2D solver in X-Y
pctype = sor    # Preconditioner

atol = 1e-12
rtol = 1e-8

core_bndry_dirichlet = false
pf_bndry_dirichlet = true
y_bndry_dirichlet = false

include_y_derivs = true

[aparSolver]
inner_boundary_flags = 0
outer_boundary_flags = 0

all_terms = true
nonuniform=true

# general settings for the model
[Hermes]

#######################
# Output variables
output_ddt = false # Output time derivatives
verbose = true    # Output additional fields

#######################
# Numerical dissipation
numdiff = -5e-4    # Numerical diffusion
polviscos = -1      # Viscosity
hyper = -1      # Hyper-diffusion
hyperpar = 1 
ExBdiff = 1e-4  # Dissipation in ExB advection terms
ExBpar = true   # Include y terms in dissipation
ADpar = 1
z_hyper_viscos = 1e-2
x_hyper_viscos = 1e-2

# Flux limiters
flux_limit_alpha = -1  # Free streaming flux limiter
kappa_limit_alpha = 0.2 # SOLPS style heat flux limiter
eta_limit_alpha   = 0.5 # SOLPS style viscosity limiter

#######################
# Electric field and Ohm's law
electromagnetic = true  # Electromagnetic? Otherwise electrostatic
FiniteElMass    = true  # Finite electron mass?

# Electrostatic potential
split_n0 = false  # Solve n=0 separately?
split_n0_psi = false

# NOTE: all currents switched off for fluid run
j_diamag       = false  # Diamagnetic current: Vort <-> Pe
j_par          = false  # Parallel current:    Vort <-> Psi

pe_par         = true  # Parallel pressure gradient: Pe <-> Psi
resistivity    = true  # Resistivity: Psi -> Pe
thermal_flux   = true
thermal_force  = true
electron_viscosity = true  # Parallel electron viscosity
thermal_conduction = true  # Parallel heat conduction

poloidal_flows = false  # ExB poloidal flows


neutral_model = 4 	# Evolve neutral gas method
			# 0 - no neutrals
			# 1 - perp diffusion
			# 2 - exponential model for Nn
			# 3 - full neutral model
                        # 4 - Diffusive in XZ, fluid in Y
frecycle = 0.8


carbon_fraction = 0.01  # Carbon % 

## Settings for 2D parallel closures
sinks = false
sink_invlpar =  0.2  # 5m parallel connection length
sheath_closure = false
drift_wave = false

density_diffusion = true  # Collisional diffusion
thermal_diffusion = true
ion_viscosity = true      # Collisional viscosity
neoclassical_q = 0

anomalous_D = 0.1  # Anomalous density diffusion [m^2/s]
anomalous_chi = 0.2 # Anomalous thermal diffusion [m^2/s]

magnetic_drift = true
ion_velocity   = true

ion_neutral = 0.0

boussinesq = true

ne_bndry_flux = true
pe_bndry_flux = true
vort_bndry_flux = false

ramp_mesh      = false
ramp_timescale = 1e4

#######################
# Plasma sheath
sheath_model = 0  # 0 = Bohn, 1 = Loizu, 2 = Bohm + free density
sheath_yup = true
sheath_ydown = true
sheath_gamma = 6.5
neutral_gamma = 0.0

startprofiles = true

core_sources = true # Only sources in the core
adapt_source = true   # Feedback on profiles (PI controller)
energy_source = true   # Constant power per particle (at fixed x). False -> Constant power per volume
source_p = 1e-2       # Rate based on current error (1/timescale)
source_i = 1e-6       # Integral of error (1/timescale^2)

staggered = false

# Normalisation parameters

# Normalisation factors
Nnorm = 1e19
Tnorm = 100
Bnorm = 1

[neutral]
viscosity = 1  # Dynamic viscosity
bulk = 0       # Bulk (volume) viscosity
conduction =1 

[All]
scale = 0.0

bndry_all = neumann_o2
bndry_xin = shifted(neumann_o2)
bndry_xout = shifted(neumann_o2)

[Ne] # Electron density 
function = 0

source = 0.0 #1e2 * exp(-(32*x^2))

[Vort]
function = 0

[VePsi] # Ve + 0.5*beta_e*mi_me*psi
bndry_core = zerolaplace #shifted(dirichlet_o2) #constlaplace
bndry_pf   = shifted(dirichlet_o2)
bndry_xout = shifted(dirichlet_o2)

[Pe]  # Electron pressure
scale = 1.0
function = 0.01*max(0,ballooning(mixmode(z)*exp(-(y-0.5)^2))*(1-x))

#function = 0.01 + 0.001*ballooning(sin(8*pi*x - 5*z)*exp(-(y-0.5)^2))*(1-x)

source = 6e2 * exp(-(32*x^2))

[Ve]

[phi]
# Radial boundaries determined by Laplacian inversion
bndry_xin = none
bndry_xout = none

bndry_all = dirichlet_o2



[Nn]

scale = 1e-2
function = 1

[Vn]

scale = 0
function = 0

bndry_all = dirichlet_o2

[Vn_x]
scale = 0
function = 0
bndry_all = dirichlet_o2

[Vn_y]
scale = 0
function = 0
bndry_all = dirichlet_o2

[Vn_z]
scale = 0
function = 0
bndry_all = dirichlet_o2

[Pn]

scale = 1e-5
function = 1

bndry_all = neumann_o2

[NVn]
bndry_all = dirichlet_o2

